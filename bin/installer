#! /bin/sh
#
# (c) 2015, coded by Nat!, Mulle KybernetiK
#
[ "${TRACE}" = 'YES' ] && set -x && : "$0" "$@"

if [ "${MULLE_NO_COLOR}" != 'YES' ]
then
   # Escape sequence and resets
   C_RESET="\033[0m"

   # Useable Foreground colours, for black/white white/black
   C_RED="\033[0;31m"     C_GREEN="\033[0;32m"
   C_BLUE="\033[0;34m"    C_MAGENTA="\033[0;35m"
   C_CYAN="\033[0;36m"

   C_BR_RED="\033[0;91m"
   C_BOLD="\033[1m"

   #
   # restore colors if stuff gets wonky
   #
   trap 'printf "${C_RESET} >&2 ; exit 1"' TERM INT
fi


installer_fail()
{
   printf "${C_BR_RED}Error: $*${C_RESET}\n" >&2
   exit 1
}

#
# https://github.com/hoelzro/useful-scripts/blob/master/decolorize.pl
#

#
# stolen from:
# http://stackoverflow.com/questions/1055671/how-can-i-get-the-behavior-of-gnus-readlink-f-on-a-mac
# ----
#
_installer_prepend_path_if_relative()
{
   case "$2" in
      /*)
         printf "%s\n" "$2"
      ;;

      *)
         case "$1" in
            */)
               printf "%s%s\n" "$1" "$2"
            ;;

            *)
               printf "%s/%s\n" "$1" "$2"
            ;;
         esac
      ;;
   esac
}


installer_resolve_symlinks()
{
   local dir_context
   local filepath

   filepath="`readlink "$1"`"
   if [ $? -eq 0 ]
   then
      dir_context=`dirname -- "$1"`
      installer_resolve_symlinks "`_installer_prepend_path_if_relative "$dir_context" "$filepath"`"
   else
      printf "%s\n" "$1"
   fi
}


installer_canonicalize_path()
{
   if [ -d "$1" ]
   then
   (
      cd "$1" 2>/dev/null && pwd -P
   )
   else
      local dir
      local file

      dir="`dirname -- "$1"`"
      file="`basename -- "$1"`"
      (
         cd "${dir}" 2>/dev/null &&
         echo "`pwd -P`/${file}"
      )
   fi
}


installer_realpath()
{
   installer_canonicalize_path "`installer_resolve_symlinks "$1"`"
}


installer_get_windows_path()
{
   local directory

   directory="$1"
   if [ -z "${directory}" ]
   then
      return 1
   fi

   ( cd "$directory" ; pwd -PW ) || installer_fail "installer_failed to get pwd"
   return 0
}


installer_get_sh_windows_path()
{
   local directory

   directory="`which sh`"
   directory="`dirname -- "${directory}"`"
   directory="`installer_get_windows_path "${directory}"`"

   if [ -z "${directory}" ]
   then
      installer_fail "could not find sh.exe"
   fi
   printf "%s\n" "${directory}/sh.exe"
}


installer_sed_mangle_escape_slashes()
{
   sed -e 's|/|\\\\|g'
}


main()
{
   local prefix
   local mode

   prefix=${1:-"/usr/local"}
   [ $# -eq 0 ] || shift
   mode=${1:-755}
   [ $# -eq 0 ] || shift

   if [ -z "${prefix}" -o "${prefix}" = "--help" ] || [ -z "${mode}" ]
   then
      installer_fail "usage: install.sh [prefix] [mode]"
   fi

   prefix="`installer_realpath "${prefix}"`"
   if [ ! -d "${prefix}" ]
   then
      installer_fail "\"${prefix}\" does not exist"
   fi

   local directory

   directory="`dirname -- "$0"`"
   cd "${directory}" || installer_fail "Could not cd to \"$directory\" ($PWD)"
   cd .. || installer_fail "Could not cd to \"..\" ($PWD)"  # compensate for installer being in bin

   local bin
   local share

   bin="${prefix}/bin"
   share="${prefix}/share/mulle-sde"

   case "`uname`" in
      *arwin*)
         mkdir -p "${bin}" || exit 1
         install ${VERBOSE} -m "${mode}" "mulle-clang-add-to-xcode" "${bin}/mulle-clang-add-to-xcode" || exit 1
         printf "install: ${C_MAGENTA}${C_BOLD}%s${C_RESET}\n" "${bin}/mulle-clang-add-to-xcode" >&2
      ;;
   esac

   EXTENSION_DIR="${share}/extensions"
   mkdir -p "${EXTENSION_DIR}" || exit 1
   cp -Ra ${VERBOSE} "src/mulle-objc" "${EXTENSION_DIR}/" || exit 1

   PIX_DIR="${share}/pix"
   mkdir -p "${PIX_DIR}" || exit 1

   for i in pix/*logo*.txt
   do
      cp -a ${VERBOSE} "${i}" "${PIX_DIR}/" || exit 1
   done

}

main "$@"

