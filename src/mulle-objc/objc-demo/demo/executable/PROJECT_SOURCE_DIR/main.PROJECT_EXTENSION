/*
 * template: demo/executable/PROJECT_SOURCE_DIR/main.PROJECT_EXTENSION
 * vendor/extension: mulle-objc/objc-demo
 */
#import "import-private.h"

#include <stdio.h>

#include "<|PROJECT_NAME|>-version.h"


@interface Hello : NSObject

+ (void) print;

@end


@implementation Hello

+ (void) print
{
   printf( "VfL Bochum %d\n", <|PROJECT_UPCASE_IDENTIFIER|>_VERSION);
}

@end



int  main( int argc, char *argv[])
{
#if defined( DEBUG) && defined( __MULLE_OBJC__)
   mulle_objc_global_check_universe( __MULLE_OBJC_UNIVERSENAME__);
#endif
   [Hello print];

   return( 0);
}


/*
 * #### Advertisement ####
 *
 * Check for leaks with mulle-testallocator! Add mulle-testallocator to your
 * project:
 *
 * mulle-sde dependency add --marks all-load,no-singlephase \
 *                          --github mulle-core \
 *                          mulle-testallocator
 *
 * Then build your project again and run your executable with the following
 * environment variables:
 *
 *    MULLE_OBJC_PEDANTIC_EXIT=YES
 *    MULLE_TESTALLOCATOR=YES
 *
 * To easier pin down, where a leak is created. try any of:
 *
 *    MULLE_TESTALLOCATOR_TRACE=3
 *    MULLE_OBJC_TRACE_INSTANCE=YES
 *    MULLE_OBJC_TRACE_METHOD_CALL=YES
 *    MULLE_OBJC_TRACE_UNIVERSE=YES
 *
 * If you are writing singleton code try:
 *
 *    MULLE_OBJC_EPHEMERAL_SINGLETON=YES
 *
 */
